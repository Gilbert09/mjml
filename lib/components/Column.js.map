{"version":3,"sources":["../../src/components/Column.js"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;IAQM,iBAHL,2BAAY;AACX,WAAS,WAAT;CADD;YAGK;;;;;;;;;;gCAYQ;UACF,cAAgB,KAAK,KAAL,CAAhB,YADE;;;AAGV,aAAO,iBAAE,KAAF,CAAQ,EAAR,EAAY,KAAK,WAAL,CAAiB,UAAjB,EAA6B;AAC9C,aAAK;AACH,mBAAS,cAAT;AACA,yBAAe,YAAY,gBAAZ,CAAf;AACA,oBAAU,IAAV;AACA,qBAAW,MAAX;AACA,iBAAO,MAAP;AACA,oBAAU,YAAY,OAAZ,CAAV;AACA,kBAAQ,YAAY,QAAZ,CAAR;AACA,qBAAW,YAAY,YAAZ,CAAX;AACA,sBAAY,YAAY,aAAZ,CAAZ;AACA,wBAAc,YAAY,eAAZ,CAAd;AACA,uBAAa,YAAY,cAAZ,CAAb;SAXF;AAaA,eAAO;AACL,sBAAY,YAAY,kBAAZ,CAAZ;SADF;OAdK,CAAP,CAHU;;;;qCAuBK;mBACkB,KAAK,KAAL,CADlB;UACP,iCADO;UACM,yBADN;;AAEf,UAAM,QAAQ,YAAY,OAAZ,CAAR,CAFS;;AAIf,UAAI,SAAS,SAAT,EAAoB;AACtB,kCAAwB,SAAS,MAAI,OAAJ,CAAjC,CADsB;OAAxB;;yBAIqC,8BAAY,KAAZ,EARtB;;UAQA,2BAAP,MARO;UAQa,yBARb;;;AAUf,cAAO,IAAP;AACE,aAAK,GAAL;AACE,oCAAwB,WAAxB,CADF;;AADF,aAIO,IAAL,CAJF;AAKE;AACE,mCAAuB,WAAvB,CADF;AALF,OAVe;;;;6BAoBR;oBAC0C,KAAK,KAAL,CAD1C;UACC,kCADD;UACc,wCADd;UAC8B,0BAD9B;;AAEP,UAAM,QAAQ,YAAY,OAAZ,KAAyB,MAAM,OAAN,CAFhC;AAGP,UAAM,gBAAgB,KAAK,cAAL,EAAhB,CAHC;;AAKP,WAAK,MAAL,GAAc,KAAK,SAAL,EAAd,CALO;;AAOP,UAAI,YAAY,OAAZ,CAAJ,EAA0B;AACxB,aAAK,MAAL,CAAY,GAAZ,CAAgB,KAAhB,GAAwB,QAAQ,IAAR,CADA;OAA1B,MAEO;AACL,aAAK,MAAL,CAAY,GAAZ,CAAgB,KAAhB,GAAwB,QAAQ,GAAR,CADnB;OAFP;;AAMA,aACE;;UAAK,OAAO,KAAK,MAAL,CAAY,GAAZ,EAAiB,WAAW,aAAX,EAA0B,mBAAiB,aAAjB,EAAgC,qBAAmB,SAAS,KAAT,CAAnB,EAAvF;QACE;;YAAO,OAAO,KAAK,MAAL,CAAY,KAAZ,EAAmB,0BAAwB,YAAY,YAAZ,CAAxB,EAAmD,OAAM,MAAN,EAApF;UACE;;;YACG,gBADH;WADF;SADF;OADF,CAbO;;;;SAvDL;6BAEG,aAAa;AAClB,MAAI;AACF,YAAQ,MAAR;AACA,mBAAe,GAAf;GAFF;AAIA,OAAK;AACH,mBAAe,KAAf;GADF;;kBA0EW","file":"Column.js","sourcesContent":["import MJMLElement from './decorators/MJMLElement'\r\nimport React, { Component } from 'react'\r\nimport _ from 'lodash'\r\nimport  { widthParser } from '../helpers/mjAttribute'\r\n\r\n/**\r\n * Columns are the basic containers for your content. They must be located under mj-section tags in order to be considered by the engine\r\n */\r\n@MJMLElement({\r\n  tagName: 'mj-column'\r\n})\r\nclass Column extends Component {\r\n\r\n  static baseStyles = {\r\n    td: {\r\n      border: 'none',\r\n      borderSpacing: '0'\r\n    },\r\n    div: {\r\n      verticalAlign: \"top\"\r\n    }\r\n  };\r\n\r\n  getStyles() {\r\n    const { mjAttribute } = this.props\r\n\r\n    return _.merge({}, this.constructor.baseStyles, {\r\n      div: {\r\n        display: \"inline-block\",\r\n        verticalAlign: mjAttribute('vertical-align'),\r\n        fontSize: \"13\",\r\n        textAlign: \"left\",\r\n        width: \"100%\",\r\n        minWidth: mjAttribute('width'),\r\n        border: mjAttribute('border'),\r\n        borderTop: mjAttribute('border-top'),\r\n        borderLeft: mjAttribute('border-left'),\r\n        borderBottom: mjAttribute('border-bottom'),\r\n        borderRight: mjAttribute('border-right')\r\n      },\r\n      table: {\r\n        background: mjAttribute('background-color')\r\n      }\r\n    })\r\n  }\r\n\r\n  getColumnClass() {\r\n    const { mjAttribute, sibling } = this.props\r\n    const width = mjAttribute('width')\r\n\r\n    if (width == undefined) {\r\n      return `mj-column-per-${parseInt(100/sibling)}`\r\n    }\r\n\r\n    const { width: parsedWidth, unit } = widthParser(width)\r\n\r\n    switch(unit) {\r\n      case '%':\r\n        return `mj-column-per-${parsedWidth}`\r\n\r\n      case 'px':\r\n      default:\r\n        return `mj-column-px-${parsedWidth}`\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { mjAttribute, renderChildren, sibling } = this.props\r\n    const width = mjAttribute('width') || (100 / sibling)\r\n    const mjColumnClass = this.getColumnClass()\r\n\r\n    this.styles = this.getStyles()\r\n\r\n    if (mjAttribute('width')) {\r\n      this.styles.div.width = width + \"px\";\r\n    } else {\r\n      this.styles.div.width = width + \"%\";\r\n    }\r\n\r\n    return (\r\n      <div style={this.styles.div} className={mjColumnClass} aria-labelledby={mjColumnClass} data-column-width={parseInt(width)}>\r\n        <table style={this.styles.table} data-legacy-background={mjAttribute('background')} width=\"100%\">\r\n          <tbody>\r\n            {renderChildren()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Column\r\n"]}