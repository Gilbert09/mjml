{"version":3,"sources":["../../src/components/Image.js"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;IAoBM,gBAfL,iCAAkB;AACjB,WAAS,UAAT;AACA,cAAY;AACV,cAAU,MAAV;AACA,sBAAkB,MAAlB;AACA,oBAAgB,MAAhB;AACA,qBAAiB,MAAjB;AACA,mBAAe,MAAf;AACA,aAAS,QAAT;AACA,WAAO,EAAP;AACA,cAAU,MAAV;AACA,YAAQ,EAAR;AACA,WAAO,EAAP;GAVF;CAFD;YAeK;;;;;;;;;;sCAgBc;UACR,cAAgB,KAAK,KAAL,CAAhB,YADQ;;AAEhB,UAAM,QAAQ,iBAAE,GAAF,CAAM,CAAC,SAAS,YAAY,OAAZ,CAAT,CAAD,EAAiC,SAAS,YAAY,aAAZ,CAAT,CAAjC,CAAN,CAAR,CAFU;AAGhB,UAAM,eAAe,SAAS,YAAY,cAAZ,CAAT,KAAyC,CAAzC,CAHL;AAIhB,UAAM,cAAc,SAAS,YAAY,eAAZ,CAAT,KAA0C,CAA1C,CAJJ;AAKhB,UAAM,gBAAgB,cAAc,YAAd,GAA6B,KAA7B,GAAqC,SAAS,YAAY,aAAZ,CAAT,CAArC,CALN;;AAOhB,aAAO,gBAAgB,CAAhB,GAAoB,QAAQ,aAAR,GAAwB,KAA5C,CAPS;;;;gCAUN;UACF,cAAgB,KAAK,KAAL,CAAhB,YADE;;;AAGV,aAAO,iBAAE,KAAF,CAAQ,EAAR,EAAY,KAAK,WAAL,CAAiB,UAAjB,EAA6B;AAC9C,aAAK;AACH,kBAAQ,YAAY,QAAZ,CAAR;AACA,oBAAU,KAAK,eAAL,EAAV;AACA,kBAAQ,YAAY,QAAZ,CAAR;SAHF;OADK,CAAP,CAHU;;;;kCAYE;UACJ,cAAgB,KAAK,KAAL,CAAhB,YADI;;;AAGZ,UAAI,SAAS,YAAY,SAAZ,CAAT,CAHQ;;AAKZ,UAAM,MACJ;AACE,aAAK,YAAY,KAAZ,CAAL;AACA,gBAAO,GAAP;AACA,aAAK,YAAY,KAAZ,CAAL;AACA,eAAO,KAAK,MAAL,CAAY,GAAZ;AACP,eAAO,KAAK,MAAL,CAAY,GAAZ,CAAgB,QAAhB;AACP,gBAAQ,KAAK,MAAL,CAAY,GAAZ,CAAgB,MAAhB;AACR,wBAAc,MAAd,EAPF,CADI,CALM;;AAgBZ,UAAI,YAAY,MAAZ,KAAuB,EAAvB,EAA2B;AAC7B,eACE;;YAAG,MAAM,YAAY,MAAZ,CAAN,EAAH;UACG,GADH;SADF,CAD6B;OAA/B,MAOK;AACH,eAAO,GAAP,CADG;OAPL;;;;6BAYO;UACC,cAAgB,KAAK,KAAL,CAAhB,YADD;;;AAGP,WAAK,MAAL,GAAc,KAAK,SAAL,EAAd,CAHO;;AAKP,UAAI,kBAAkB,YAAY,OAAZ,KAAwB,EAAxB,CALf;;AAOP,aACE;;;AACE,qBAAW,eAAX;AACA,kBAAO,GAAP;AACA,uBAAY,GAAZ;AACA,uBAAY,GAAZ;AACA,+BAAmB,YAAY,OAAZ,CAAnB;AACA,iBAAO,KAAK,MAAL,CAAY,KAAZ,EANT;QAOE;;;UACE;;;YACE;;;cACG,KAAK,WAAL,EADH;aADF;WADF;SAPF;OADF,CAPO;;;;SAlEL;6BAEG,aAAa;AAClB,SAAO;AACL,oBAAgB,UAAhB;AACA,mBAAe,GAAf;GAFF;AAIA,OAAK;AACH,YAAQ,MAAR;AACA,aAAS,OAAT;AACA,aAAS,MAAT;AACA,oBAAgB,MAAhB;AACA,WAAO,MAAP;GALF;;kBAuFW","file":"Image.js","sourcesContent":["import MJMLColumnElement from './decorators/MJMLColumnElement'\r\nimport React, { Component } from 'react'\r\nimport _ from 'lodash'\r\n\r\n/**\r\n * Displays an image to your email. It is mostly similar to the HTML img tag\r\n */\r\n@MJMLColumnElement({\r\n  tagName: 'mj-image',\r\n  attributes: {\r\n    'height': 'auto',\r\n    'padding-bottom': '10px',\r\n    'padding-left': '25px',\r\n    'padding-right': '25px',\r\n    'padding-top': '10px',\r\n    'align': 'center',\r\n    'alt': '',\r\n    'border': 'none',\r\n    'href': '',\r\n    'src': ''\r\n  }\r\n})\r\nclass Image extends Component {\r\n\r\n  static baseStyles = {\r\n    table: {\r\n      borderCollapse: 'collapse',\r\n      borderSpacing: '0'\r\n    },\r\n    img: {\r\n      border: 'none',\r\n      display: 'block',\r\n      outline: 'none',\r\n      textDecoration: 'none',\r\n      width: \"100%\"\r\n    }\r\n  };\r\n\r\n  getContentWidth() {\r\n    const { mjAttribute } = this.props\r\n    const width = _.min([parseInt(mjAttribute('width')), parseInt(mjAttribute('parentWidth'))])\r\n    const paddingRight = parseInt(mjAttribute('padding-left')) || 0\r\n    const paddingLeft = parseInt(mjAttribute('padding-right')) || 0\r\n    const widthOverflow = paddingLeft + paddingRight + width - parseInt(mjAttribute('parentWidth'))\r\n\r\n    return widthOverflow > 0 ? width - widthOverflow : width\r\n  }\r\n\r\n  getStyles() {\r\n    const { mjAttribute } = this.props\r\n\r\n    return _.merge({}, this.constructor.baseStyles, {\r\n      img: {\r\n        border: mjAttribute('border'),\r\n        maxWidth: this.getContentWidth(),\r\n        height: mjAttribute('height')\r\n      }\r\n    })\r\n  }\r\n\r\n  renderImage() {\r\n    const { mjAttribute } = this.props\r\n\r\n    let mcEdit = mjAttribute('mc-edit');\r\n\r\n    const img = (\r\n      <img\r\n        alt={mjAttribute('alt')}\r\n        border=\"0\"\r\n        src={mjAttribute('src')}\r\n        style={this.styles.img}\r\n        width={this.styles.img.maxWidth}\r\n        height={this.styles.img.height}\r\n        data-mc-edit={mcEdit} />\r\n    )\r\n\r\n    if (mjAttribute('href') != '') {\r\n      return (\r\n        <a href={mjAttribute('href')}>\r\n          {img}\r\n        </a>\r\n      )\r\n    }\r\n    else {\r\n      return img\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { mjAttribute } = this.props\r\n\r\n    this.styles = this.getStyles()\r\n\r\n    let customClassName = mjAttribute('class') || \"\";\r\n\r\n    return (\r\n      <table\r\n        className={customClassName}\r\n        border=\"0\"\r\n        cellPadding=\"0\"\r\n        cellSpacing=\"0\"\r\n        data-legacy-align={mjAttribute('align')}\r\n        style={this.styles.table}>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              {this.renderImage()}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Image\r\n"]}